diff -rup httpd-2.2.34.orig/modules/generators/mod_info.c httpd-2.2.34/modules/generators/mod_info.c
--- httpd-2.2.34.orig/modules/generators/mod_info.c	2013-02-18 17:52:21.000000000 +0100
+++ httpd-2.2.34/modules/generators/mod_info.c	2017-11-19 20:10:40.989473607 +0100
@@ -75,6 +75,11 @@ typedef struct
 
 module AP_MODULE_DECLARE_DATA info_module;
 
+/* current file name when doing -DDUMP_CONFIG */
+const char *dump_config_fn_info;
+/* file handle when doing -DDUMP_CONFIG */
+apr_file_t *out = NULL;
+
 static void *create_info_config(apr_pool_t * p, server_rec * s)
 {
     info_svr_conf *conf =
@@ -100,34 +105,74 @@ static void put_int_flush_right(request_
 {
     if (field > 1 || i > 9)
         put_int_flush_right(r, i / 10, field - 1);
-    if (i)
-        ap_rputc('0' + i % 10, r);
+    if (i) {
+        if (r)
+            ap_rputc('0' + i % 10, r);
+        else
+            apr_file_putc((char)('0' + i % 10), out);
+    }
+    else {
+        if (r)
+            ap_rputs("&nbsp;", r);
+        else
+            apr_file_printf(out, " ");
+    }
+
+}
+
+static void set_fn_info(request_rec *r, const char *name)
+{
+    if (r)
+        ap_set_module_config(r->request_config, &info_module, (void *)name);
     else
-        ap_rputs("&nbsp;", r);
+        dump_config_fn_info = name;
+}
+
+static const char *get_fn_info(request_rec *r)
+{
+    if (r)
+        return ap_get_module_config(r->request_config, &info_module);
+    else
+        return dump_config_fn_info;
 }
 
 static void mod_info_indent(request_rec * r, int nest,
                             const char *thisfn, int linenum)
 {
     int i;
-    const char *prevfn =
-        ap_get_module_config(r->request_config, &info_module);
+    const char *prevfn = get_fn_info(r);
     if (thisfn == NULL)
         thisfn = "*UNKNOWN*";
     if (prevfn == NULL || 0 != strcmp(prevfn, thisfn)) {
-        thisfn = ap_escape_html(r->pool, thisfn);
-        ap_rprintf(r, "<dd><tt><strong>In file: %s</strong></tt></dd>\n",
+        if (r) {
+            thisfn = ap_escape_html(r->pool, thisfn);
+            ap_rprintf(r, "<dd><tt><strong>In file: %s</strong></tt></dd>\n",
                    thisfn);
-        ap_set_module_config(r->request_config, &info_module,
-                             (void *) thisfn);
+        }
+        else {
+            apr_file_printf(out, "# In file: %s\n", thisfn);
+        }
+	set_fn_info(r, thisfn);
     }
 
-    ap_rputs("<dd><tt>", r);
-    put_int_flush_right(r, linenum > 0 ? linenum : 0, 4);
-    ap_rputs(":&nbsp;", r);
+    if (r) {
+        ap_rputs("<dd><tt>", r);
+        put_int_flush_right(r, linenum > 0 ? linenum : 0, 4);
+        ap_rputs(":&nbsp;", r);
+    }
+/*    else if (linenum > 0) {
+        for (i = 1; i <= nest; ++i)
+            apr_file_printf(out, "  ");
+        apr_file_putc('#', out);
+        put_int_flush_right(r, linenum, 4);
+        apr_file_printf(out, ":\n");
+    } */
 
     for (i = 1; i <= nest; ++i) {
-        ap_rputs("&nbsp;&nbsp;", r);
+        if (r)
+            ap_rputs("&nbsp;&nbsp;", r);
+        else
+            apr_file_printf(out, "  ");
     }
 }
 
@@ -135,18 +180,24 @@ static void mod_info_show_cmd(request_re
                               int nest)
 {
     mod_info_indent(r, nest, dir->filename, dir->line_num);
-    ap_rprintf(r, "%s <i>%s</i></tt></dd>\n",
-               ap_escape_html(r->pool, dir->directive),
-               ap_escape_html(r->pool, dir->args));
+    if (r)
+        ap_rprintf(r, "%s <i>%s</i></tt></dd>\n",
+                   ap_escape_html(r->pool, dir->directive),
+                   ap_escape_html(r->pool, dir->args));
+    else
+        apr_file_printf(out, "%s %s\n", dir->directive, dir->args);
 }
 
 static void mod_info_show_open(request_rec * r, const ap_directive_t * dir,
                                int nest)
 {
     mod_info_indent(r, nest, dir->filename, dir->line_num);
-    ap_rprintf(r, "%s %s</tt></dd>\n",
-               ap_escape_html(r->pool, dir->directive),
-               ap_escape_html(r->pool, dir->args));
+    if (r)
+        ap_rprintf(r, "%s %s</tt></dd>\n",
+                   ap_escape_html(r->pool, dir->directive),
+                   ap_escape_html(r->pool, dir->args));
+    else
+        apr_file_printf(out, "%s %s\n", dir->directive, dir->args);
 }
 
 static void mod_info_show_close(request_rec * r, const ap_directive_t * dir,
@@ -155,11 +206,17 @@ static void mod_info_show_close(request_
     const char *dirname = dir->directive;
     mod_info_indent(r, nest, dir->filename, 0);
     if (*dirname == '<') {
-        ap_rprintf(r, "&lt;/%s&gt;</tt></dd>",
-                   ap_escape_html(r->pool, dirname + 1));
+        if (r)
+            ap_rprintf(r, "&lt;/%s&gt;</tt></dd>",
+                       ap_escape_html(r->pool, dirname + 1));
+        else
+            apr_file_printf(out, "</%s>\n", dirname + 1);
     }
     else {
-        ap_rprintf(r, "/%s</tt></dd>", ap_escape_html(r->pool, dirname));
+        if (r)
+            ap_rprintf(r, "/%s</tt></dd>", ap_escape_html(r->pool, dirname));
+        else
+            apr_file_printf(out, "/%s\n", dirname);
     }
 }
 
@@ -189,7 +246,7 @@ static int mod_info_module_cmds(request_
     int shown = from;
     ap_directive_t *dir;
     if (level == 0)
-        ap_set_module_config(r->request_config, &info_module, NULL);
+	set_fn_info(r, NULL);
     for (dir = node; dir; dir = dir->next) {
         if (dir->first_child != NULL) {
             if (level < mod_info_module_cmds(r, cmds, dir->first_child,
@@ -810,9 +867,18 @@ static const command_rec info_cmds[] = {
     {NULL}
 };
 
+static void check_config(apr_pool_t *p, server_rec *s)
+{
+    if (ap_exists_config_define("DUMP_CONFIG")) {
+        apr_file_open_stdout(&out, p);
+        mod_info_module_cmds(NULL, NULL, ap_conftree, 0, 0);
+    }
+}
+
 static void register_hooks(apr_pool_t * p)
 {
     ap_hook_handler(display_info, NULL, NULL, APR_HOOK_MIDDLE);
+    ap_hook_test_config(check_config, NULL, NULL, APR_HOOK_MIDDLE);
 }
 
 module AP_MODULE_DECLARE_DATA info_module = {
